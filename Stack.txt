
#include<iostream>
using namespace std;
#define MAXSIZE 5

int s[MAXSIZE]; 
int top; 


void push(int value);
int pop();
int topp();
int isStackEmpty();
int isStackFull();
void display_stack();
int stackSize();

void push(int value)
{
         if(top >= stack_size-1)
	cout<<"stack is full”;
     else
	{
	top++; /increase top by 1 
	stack[top] = X;
	}

}

int pop()
{
       if(top<0)
	cout<<"underflow: stack is empty”;
    else
	{
    	x = stack[top];
	top--;
	}

}

int isStackEmpty()
{
    return ( top == -1 );
}

int isStackFull()
{
      return ( top >= stack_size-1);
}

int stackSize()
{
    top = -1;
}

void display_stack()
{
    int i;
	for(i=top; i>=0; i--)
		cout<< “   “<<stack[i];


}
int topp()
{
    return stack[top]; 
}
int main()
{
    int option,n, value;
    cout<<"C program to implement stack operations\n";
    do
    {
        cout<<"\n\n 1.Push an element in stack";
        cout<<"\n 2.Pop an element from stack";
        cout<<"\n 3.Display stack";
        cout<<"\n 4.Display current stack size ";
        cout<<"\n 5.Display top element ";
        cout<<"\n 6.Exit";
        cout<<"\n Enter your choice: ";
        cin>>option;
        switch(option)
        {
        case 1:
            cout<<"\n Insert an element in stack";
            cin>>n;
            push(n);
            break;
        case 2:
            value = pop();
            cout<<"\n Popped element is: "<<value<<endl;
            break;
        case 3:
            display_stack();
            break;
        case 4:
            value=stackSize();
	    cout<<"\n Current no. of element in stack is: "<<value<<endl;
            break;
        case 5:
            value=topp();
	    cout<<"\n Current top element of stack is: "<<value<<endl;
            break;
        case 6:
      4:58 AM 11/12/2018      return 0;
        }

    }
    while(option<=6);

    return 0;
}
